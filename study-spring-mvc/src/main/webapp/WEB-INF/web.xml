<?xml version="1.0" encoding="UTF-8"?>
 <web-app xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                       http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
                       
    <!-- web.xml 的加载顺序是：context-param -> listener -> filter -> servlet -->                  
    <context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>demo</param-value>
    </context-param>
    
          
    <!--  当请求资源匹配多个 filter-mapping 时，filter 拦截资源是按照 filter-mapping 配置节出现的顺序来依次调用 doFilter() 方法的。 -->
    <!-- filter-mapping 不一定要出现在 filter 之后，但是filter name 一定要有存在的对应的filter -->
    <!--  define in the  DyFilterInitializer 
    <filter-mapping>
    	 <filter-name>demo</filter-name>
    	 <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->

    <filter-mapping>
    	 <filter-name>test</filter-name>
    	  <url-pattern>/*</url-pattern>  
    </filter-mapping>
    
    
    <!-- web 容器启动时初始化每个 filter 时， 初始化顺序不是按照出现的顺序来的 -->
    <!-- 第一次加载容器执行顺序随机，以后再次加载顺序以第一次加载顺序为准 -->
    <filter>
    	 <filter-name>test</filter-name> 
    	 <filter-class>filter.TestFilter</filter-class>
    </filter>
    <!--  define in the  DyFilterInitializer 
     <filter>
    	 <filter-name>demo</filter-name>
    	 <filter-class>filter.DemoFilter</filter-class>
     </filter>
     -->
     
    <listener>
    	<listener-class>listener.TestContextListener</listener-class>
    </listener>
    
     
   	 <listener>
    	<listener-class>listener.OrderContextListener</listener-class>
    </listener>
    
    <context-param>
    	<param-name>demo</param-name>
    	<param-value>test</param-value>
    </context-param>
    
     <listener>
    	<listener-class>listener.SessionCtListener</listener-class>
    </listener>
    
    <session-config>
    	<!-- the default value is 30 minutes -->
    	<session-timeout>1</session-timeout>
    </session-config>
    <!-- add in the OrderContextListener
    <listener>
    	<listener-class>listener.SessionAttrListener</listener-class>
    </listener>
     -->
 </web-app>